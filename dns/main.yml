- name: Install Bind
  hosts: dns-servers
  #hosts: "{{ ansible_limit | default(omit) }}"
  become: true
  gather_facts: true

  vars_files:
  - vars/vars.yml


  # Include the handler using import_tasks
  handlers:
    - import_tasks: handlers/restart-bind.yml

  tasks:
  - name: Include variables
    ansible.builtin.include_vars:
      file: "{{ item }}"
    with_fileglob:
     - vars/*

  - name: Verify if the current host is listed as a nameserver
    fail:
      msg: >
        The current host {{ ansible_fqdn }} (or {{ inventory_hostname_short }}) is not listed as a nameserver in the vars.yml file.
        Resolution: Make sure the current host's name or FQDN is correctly listed under 'nameservers' in the vars.yml.
    when: "(ansible_fqdn not in (nameservers | map(attribute='name') | list)) and (inventory_hostname_short not in (nameservers | map(attribute='name') | list))"


  - name: Ensure dependencies are installed.
    ansible.builtin.apt:
      name:
      - bind9
      - bind9utils
      - bind9-doc
      state: present

  - name: Check if TSIG key already exists
    ansible.builtin.stat:
      path: /etc/bind/tsig.key
    register: tsig_key_stat
    become: true

  - name: Generate TSIG key
    ansible.builtin.command: tsig-keygen -a hmac-sha256
    register: tsig_key_output
    become: true
    when: not tsig_key_stat.stat.exists

  - name: Save TSIG key to file
    ansible.builtin.copy:
      content: "{{ tsig_key_output.stdout }}"
      dest: /etc/bind/tsig.key
      owner: bind
      group: bind
      mode: '0640'
    become: true
    when: not tsig_key_stat.stat.exists

  - name: Add TSIG key include to named.conf
    ansible.builtin.lineinfile:
      path: /etc/bind/named.conf
      line: 'include "/etc/bind/tsig.key";'
      state: present
    become: true

  - name: Create named.conf.local from template
    ansible.builtin.template:
      src: templates/named.conf.local.j2
      dest: /etc/bind/named.conf.local
      owner: bind
      group: bind
      mode: '0644'
    become: true

  - name: Create named.conf.options from template
    ansible.builtin.template:
      src: templates/named.conf.options.j2
      dest: /etc/bind/named.conf.options
      owner: bind
      group: bind
      mode: '0644'
    become: true

  - name: Ensure the zones directory exists
    ansible.builtin.file:
      path: /etc/bind/zones
      state: directory
      owner: bind
      group: bind
      mode: '0755'
    become: true

  - name: Create trahan.dev forward zone file from template
    ansible.builtin.template:
      src: templates/db.trahan.dev.j2
      dest: /etc/bind/zones/db.trahan.dev
      owner: bind
      group: bind
      mode: '0644'
    become: true

  - name: Create test.trahan.dev forward zone file from template
    ansible.builtin.template:
      src: templates/db.test.trahan.dev.j2
      dest: /etc/bind/zones/db.test.trahan.dev
      owner: bind
      group: bind
      mode: '0644'
    become: true

  - name: Create forward zone file for dev.justintrahan.com
    ansible.builtin.template:
      src: templates/db.dev.justintrahan.com.j2
      dest: /etc/bind/zones/db.dev.justintrahan.com
      owner: bind
      group: bind
      mode: '0644'
    become: true

  - name: Create reverse zone file for 0.0.10.in-addr.arpa from template
    ansible.builtin.template:
      src: templates/db.reverse_0_0_10.j2
      dest: /etc/bind/zones/0.0.10.in-addr.arpa
      owner: bind
      group: bind
      mode: '0644'
    become: true

  - name: Create reverse zone file for 1.0.10.in-addr.arpa from template
    ansible.builtin.template:
      src: templates/db.reverse_1_0_10.j2
      dest: /etc/bind/zones/1.0.10.in-addr.arpa
      owner: bind
      group: bind
      mode: '0644'
    become: true

  - name: Attempt to restart bind9
    ansible.builtin.systemd:
      name: bind9
      state: restarted


  - name: Restart systemd-resolved on localhost
    ansible.builtin.systemd:
      name: systemd-resolved
      state: restarted
    delegate_to: localhost
    become: true
    run_once: true


  - name: Flush local DNS Cache with resolvectl
    ansible.builtin.command:
      cmd: resolvectl flush-caches
    delegate_to: localhost
    become: true
    run_once: true
